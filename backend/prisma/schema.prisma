// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id     String   @id @default(cuid())
  email  String   @unique
  name   String
  password String
  role   UserRole @default(PARTICIPANT)
  teamId String?
  team   Team?   @relation(fields: [teamId], references: [id])
}

model Team {
  id   String @id @default(cuid())
  name String @unique

  members User[]

  problemStatementId String?
  problemStatement   ProblemStatement? @relation(fields: [problemStatementId], references: [id])

  submission Submission?
}

model Category {
  id   String @id @default(cuid())
  name String @unique

  problemStatements ProblemStatement[]
}

model ProblemStatement {
  id          String @id @default(cuid())
  title       String
  description String @db.Text

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  teams Team[]
}

model Submission {
  id            String @id @default(cuid())
  projectTitle  String
  githubRepoUrl String @unique 
  teamId String @unique
  team   Team   @relation(fields: [teamId], references: [id])

  submittedAt DateTime @default(now())
}

enum UserRole {
  ADMIN
  PARTICIPANT
}
